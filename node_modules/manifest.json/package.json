{
  "_args": [
    [
      {
        "raw": "manifest.json",
        "scope": null,
        "escapedName": "manifest.json",
        "name": "manifest.json",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Baimai\\Desktop\\pwa"
    ]
  ],
  "_from": "manifest.json@latest",
  "_id": "manifest.json@1.2.0",
  "_inCache": true,
  "_location": "/manifest.json",
  "_npmUser": {
    "name": "michael.paulson",
    "email": "michael.b.paulson@gmail.com"
  },
  "_npmVersion": "1.1.71",
  "_phantomChildren": {},
  "_requested": {
    "raw": "manifest.json",
    "scope": null,
    "escapedName": "manifest.json",
    "name": "manifest.json",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/manifest.json/-/manifest.json-1.2.0.tgz",
  "_shasum": "26b5e997e12a0808eba7fadb70aefbc8861227d9",
  "_shrinkwrap": null,
  "_spec": "manifest.json",
  "_where": "C:\\Users\\Baimai\\Desktop\\pwa",
  "author": {
    "name": "Michael Brady Paulson",
    "email": "michael.b.paulson@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/michaelp983/manifest.json/issues"
  },
  "dependencies": {
    "browserify": ">= 2.17.3",
    "lodash": ">= 1.2.1"
  },
  "description": "An automation tool for building modules with browserify",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-watch": "~0.4.4",
    "jquery-browserify": "*",
    "lodash": "*",
    "mkpath": "*",
    "q": "*",
    "rx": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "26b5e997e12a0808eba7fadb70aefbc8861227d9",
    "tarball": "https://registry.npmjs.org/manifest.json/-/manifest.json-1.2.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/michaelp983/manifest.json",
  "keywords": [
    "gruntplugin",
    "modules",
    "browserify"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/michaelp983/manifest.json/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "michael.paulson",
      "email": "michael.b.paulson@gmail.com"
    }
  ],
  "name": "manifest.json",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "## THIS IS STILL ALPHA\nSorry, this was thrown together as fast as possible.  I'll update it to use browserify object and not command line, and better exclusion of other libraries.\n\n# manifest.json\n\n> An automation tool for building modules with browserify\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install manifest.json --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('manifest.json');\n```\n\n## The \"manifest_json\" task\n\n### Overview\nMission Statement: To create a reliable, fast build process with low overhead and maintenance.\n\nBasics\n-----\n\n### Basic Build\nNote, please use relative pathing within the Manifest.JSON file and within grunt.\n```js\ngrunt.initConfig({\n    manifest_json: {\n        build1: {\n            options: {\n                dist: './dist',\n                files: './package/manifest.json'\n            }\n        }\n    },\n})\n```\n\n### Example Manifest\n```js\n{\n    \"requires\": [\n        \"core.js:core\",\n        \"../components/jquery/jquery.min.js:jquery\",\n        \"lodash\",\n        \"q\"\n    ],\n    \"ignores\": [],\n    \"excludes\": [],\n    \"entry\": \"core.js\",\n    \"bundle\": \"js-core.js\"\n}\n```\n\nOptions\n-----\n\n### Build Options\n* `dist` The none-required distribution folder to put the bundle.  Will work in conjuction with `cwd`\n* `cwd`  The current working directory all of these files should be considered *relative* from.  This does not apply to the Manifest.JSON files\n* `all`  Will compile every `manifestFile` from the `Gruntfile` root.\n* `manifestFile`  The name of the manifest file.  Default: `manifest.json`\n\n\n### Manifest Options\n* `requires`  An array of files to be exposed for other bundles (aka externalize).  A `:` can be used to give the require an easier name.  `./lib/awesome_lib/awesome.js:awesome`\n* `externals` Will be treated as externals and not included within the source bundle.\n* `externalFolders`  Will find every `js` file and `external` it.\n* `bundle`  The name of the bundle to compile to\n* `entry` The file(s) (String or Array) of entry points.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/michaelp983/manifest.json.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.2.0"
}
